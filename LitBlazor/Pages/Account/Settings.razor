@page "/account/settings"
@attribute [Authorize]
@layout MainLayout
@inject IAccountService AccountService
@inject NavigationManager NavigationManager


@if (model != null)
{
<MudContainer Style="display: inline-block; position: relative; top: 0; bottom: 0; left: 0; right: 0; width: 400px; height: 100px; margin: auto; ">
    <EditForm Model="@model" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudTextField Label="First name" HelperText="Max. 2 characters"
                              @bind-Value="model.UserName" For="@(() => model.UserName)" />
                <MudTextField Label="Last name" Class="mt-3"
                              @bind-Value="model.LastName" For="@(() => model.LastName)" />
                <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                              @bind-Value="model.Password" For="@(() => model.Password)" InputType="InputType.Password" />
                <MudTextField Label="Confirm password" HelperText="Repeat the password" Class="mt-3"
                              @bind-Value="model.ConfirmPassword" For="@(() => model.ConfirmPassword)" InputType="InputType.Password" />
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Edit user</MudButton>
            </MudCardActions>
        </MudCard>

        <MudExpansionPanels>
            <MudExpansionPanel Text="Show Validation Summary">
                @if (success)
                {
                    <MudText Color="Color.Success">Success</MudText>
                }
                else
                {
                    <MudText Color="@Color.Error">
                        <ValidationSummary />
                    </MudText>
                }
            </MudExpansionPanel>
        </MudExpansionPanels>
    </EditForm>
</MudContainer>
}
else
{
    <div class="text-center p-3">
        <span class="spinner-border spinner-border-lg align-center"></span>
    </div>
}
@code {
    private UpdateAccount model = new UpdateAccount();
    [Parameter] public int UserId {get;set;}
    private bool loading;
    private bool success;
    private async void OnValidSubmit()
    {
        var user = await AccountService.GetUserDataFromLocalStorage();
        UserId = user.Id;
        loading = true;
        try
        {
            await AccountService.Update(UserId,model);
            NavigationManager.NavigateTo("/chat");
        }
        catch 
        {
            loading = false;
            StateHasChanged();
        }
    }
}