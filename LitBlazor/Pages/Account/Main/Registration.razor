@page "/account/register"
@inject IAccountService AccountService
@inject NavigationManager NavigationManager

<div style="max-width: 400px;">
    <EditForm Model="@_registerAccount" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudTextField Label="First name" Class="mt-3"
                              @bind-Value="_registerAccount.FirstName" For="@(() => _registerAccount.FirstName)" HelperText="Min.2 characters" />
                <MudTextField Label="Last name" Class="mt-3"
                              @bind-Value="_registerAccount.LastName" For="@(() => _registerAccount.LastName)" HelperText="Min.2 characters" />
                <MudTextField Label="Email" Class="mt-3"
                              @bind-Value="_registerAccount.Email" For="@(() => _registerAccount.Email)" InputType="InputType.Email"/>
                <MudTextField Label="Password" Class="mt-3"
                              @bind-Value="_registerAccount.Password" For="@(() => _registerAccount.Password)"HelperText="Choose a strong password" InputType="InputType.Password"/>
                <MudTextField Label="Confirm Password" Class="mt-3"
                              @bind-Value="_registerAccount.ConfirmPassword" For="@(() => _registerAccount.ConfirmPassword)" HelperText="Repeat the password" InputType="InputType.Password"/>
                <MudSwitch @bind-Checked="_registerAccount.AcceptTerms" For="@(() => _registerAccount.AcceptTerms)" Label="Accept Terms & Conditions" Color="Color.Success" />
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Success" Size=Size.Large Class="ml-auto">Register</MudButton>
                <MudSpacer/>
                <MudButton ButtonType="ButtonType.Button" Variant="Variant.Filled" OnClick=@(()=>Login()) Color="Color.Warning" Size=Size.Small Class="ml-auto">Cancel</MudButton>
            </MudCardActions>
             <MudProgressLinear Color="Color.Primary" Indeterminate=loading/>
        </MudCard>
         @if (!string.IsNullOrEmpty(error))
            {
                <div class="alert alert-danger mt-3 mb-0">@error</div>
            }
    </EditForm>
</div>
@code
{
    private readonly RegisterAccount _registerAccount = new();
    private string error;
    private bool loading;
    protected void Login()
    {
        NavigationManager.NavigateTo("/account/login");
    }
    private async void OnValidSubmit()
    {
        loading = true;
        try
        {
            await AccountService.Register(_registerAccount);
            NavigationManager.NavigateTo("account/verify");
        }
        catch(Exception ex)
        {
            loading = false;
            error = ex.Message;
            StateHasChanged();
        }
    }
}
